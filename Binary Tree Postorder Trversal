/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
       List<Integer> result = new ArrayList<>();
    
    postOrder(root, result);
    
    return result;
    
}

private void postOrder(TreeNode node, List<Integer> result){
    
    if(node == null){
        return;
    }
    
    // left
    postOrder(node.left, result);
    
    // right
    postOrder(node.right, result);
   
    // add to result
    result.add(node.val);

    }
}
