class Solution {
    public int minPathSum(int[][] grid) {
          // Dynamic Programming
        int rowNum = grid.length;
        int colNum = grid[0].length;

        int[][] result = new int[rowNum][colNum];
        
        result[0][0] = grid[0][0];
        
        // fill first col
        for(int i = 1; i < rowNum; i ++){
            result[i][0] = grid[i][0] + result[i - 1][0];
        }
        
        for(int j = 1; j < colNum; j++){
            result[0][j] = grid[0][j] + result[0][j - 1];
        }
        
        // fill all arrays
        for(int i = 1; i < rowNum; i++){
            for(int j = 1; j < colNum; j++){
                result[i][j] = grid[i][j] + Math.min(result[i - 1][j], result[i][j - 1]);
            }
        }
        
        return result[rowNum - 1][colNum - 1];
    }
}
