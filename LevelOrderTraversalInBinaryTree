/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<List<Integer>> res = new ArrayList<List<Integer>>();
    public List<List<Integer>> levelOrder(TreeNode root) {
       if(root == null) { return res; }
    List<TreeNode> curr = new ArrayList<TreeNode>();
    curr.add(root);
    traverse(curr);
    return res;
}

public void traverse(List<TreeNode> level) {
    if(level.size() == 0) { return; }
    List<Integer> curr = new ArrayList<Integer>();
    List<TreeNode> next = new ArrayList<TreeNode>();
    for(TreeNode node : level) {
        curr.add(node.val);
        if(node.left != null) { next.add(node.left); }
        if(node.right != null) { next.add(node.right); }
    }
    res.add(curr);
    traverse(next);  
    }
}
