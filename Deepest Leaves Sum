/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int sum=0;
    int maxDepth=0;
    public int deepestLeavesSum(TreeNode root) {
       maxDepth = getMaxDepth(root);
        getLeaf(root, 0);
        return sum;
    }
    
    public void getLeaf(TreeNode root, int count){
        
        if(root == null)
            return;
        
        if(root.left == null && root.right == null){
            count++;
            if(count == maxDepth)
                sum = sum+root.val;
            count--;
            return;
        }
        
        count++;
        getLeaf(root.left, count);
        getLeaf(root.right, count);
        count--;
        
    }
    
    public int getMaxDepth(TreeNode root){
        if(root == null)
            return 0;
        
        return Math.max(getMaxDepth(root.left), getMaxDepth(root.right))+1;
    }
}
