/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    HashMap<Integer,Integer> map;
    public int[] findMode(TreeNode root) {
           map = new HashMap<Integer, Integer>();
        List<Integer> ll = new ArrayList<Integer>();
        helper(root);
        int max = Collections.max(map.values());
        for(int key: map.keySet()){
            if(map.get(key) == max){
                ll.add(key);
            }
        }
        return ll.stream().mapToInt(i->i).toArray();
    }
    
    private void helper(TreeNode root){
        if(root==null){
            return;
        }
        helper(root.left);
        map.put(root.val, map.getOrDefault(root.val,0)+1);
        helper(root.right);
    }
}
